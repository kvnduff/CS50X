SPELLER QUESTIONS

LOAD FUNCTION
	// Initialise word array
	char next_word[LENGTH + 1];

	Q: Why is d_entry generated as char and not char *, it's a string so
	shouldn't it be a pointer to the char, similar to how we have generated
	strings in the past?
	A: Asked SO 20220228

	// Insert node into hash table at that location
	n->next = table[h_value];

	Q: Shouldn't n->next point to the next item in the linked list in the
	table at position h_value and not simply refer to the table at h_value
	location?
	A: No, when adding to linked list, best to first point new node/entry to
	the list itself (node_pointer-> = list). This will have the effect of
	pointing the new node to any nodes that were already in the list. Then
	after (see below answer)...

	table[h_value] = n;

	Q: How does this work? What if there are already multiple linked list
	entries inserted at this bucket in the table array? Shouldn't this line
	of code remove everthing at this location in the bucket and simply
	insert the current n? Is it implicit that if the new node be appended to
	the end of the linked list?
	A: Following up on the above answer, this line of code has the effect of
	redefining the list to the new node that was added. Remember, the new
	node was previously linked to the rest of the downstream entries in the
	linked list so now the list is defined as having the new node and the
	rest of the downstream nodes that it points to (i.e. the entire list).

